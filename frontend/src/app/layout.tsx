import type { Metadata } from 'next';
import React from 'react';
import assert from 'assert';
import localFont from 'next/font/local';
import './globals.css';
import { ClerkProvider } from '@clerk/nextjs';
import { ThemeProvider } from '@components/themeProvider';
import { Toaster } from '@components/ui/sonner';
import QueryProvider from '@components/queryProvider';
import { TransactionsProvider } from '@context/transactionContext';

const geistSans = localFont({
  src: './fonts/GeistVF.woff',
  variable: '--font-geist-sans',
  weight: '100 900',
});
const geistMono = localFont({
  src: './fonts/GeistMonoVF.woff',
  variable: '--font-geist-mono',
  weight: '100 900',
});

export const metadata: Metadata = {
  title: 'Create Next App',
  description: 'Generated by create next app',
};

export default function RootLayout({
  children,
}: Readonly<{
  children: React.ReactNode;
}>) {
  assert(process.env.NEXT_PUBLIC_SERVER_URL, 'NEXT_PUBLIC_SERVER_URL is required');

  return (
    <QueryProvider>
      <ClerkProvider>
        <TransactionsProvider>
          <html lang='en'>
            <body className={`${geistSans.variable} ${geistMono.variable} antialiased`}>
              <ThemeProvider
                attribute='class'
                defaultTheme='system'
                enableSystem
                disableTransitionOnChange>
                {children}
              </ThemeProvider>
              <Toaster />
            </body>
          </html>
        </TransactionsProvider>
      </ClerkProvider>
    </QueryProvider>
  );
}
